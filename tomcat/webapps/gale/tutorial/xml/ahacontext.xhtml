<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:gale="http://gale.tue.nl/adaptation">
<body>
<gale:object data="../header.xhtml" type="text/aha">
	<p><b>Warning:</b> If you see this text it means you are not
	viewing the page through the AHA! system.</p>
</gale:object>

<h2>Creating the AHA! Context</h2>

<p>We assume that you have <a href="compile" class="conditional">built</a>
the AHA! binaries, and that the TomCat server <gale:if
	expr="${firstconfig#knowledge}==0">
	<gale:block> (for
instance Sun's version JWDSP from <a
			href="http://java.sun.com/webservices/downloads/webservicespack.html"
			target="_blank">http://java.sun.com/webservices/downloads/webservicespack.html</a>)
</gale:block>
</gale:if> is installed and running. You need to create a "context" for AHA! so
that TomCat knows where the documents and servlets of AHA! are located.
</p>

<p>If you are using a "plain" Tomcat without <a
	href="http://java.sun.com/webservices/downloads/webservicespack.html"
	target="_blank">Sun's JWSDP</a> then the easiest thing to do is to
unzip the AHA! distribution in Tomcat's <em>webapps</em> directory. You
then do not have to configure anything else for Tomcat and can skip the
remainder of this page. (You still have to do the <gale:a
	href="firstconfig">AHA! configuration step</gale:a> though.)
Unfortunately, with a "plain" Tomcat placing AHA! anywhere else is
difficult (and not explained here).</p>

<p>In the sequel we will assume that you <em>are</em> using <a
	href="http://java.sun.com/webservices/downloads/webservicespack.html"
	target="_blank">Sun's JWSDP</a> and that the directory in which you
unpacked the AHA! zip archive is "d:\aha3". On a Windows system "c:\aha"
might also be a good choice and on Linux "/usr/local/aha" or "$HOME/aha"
might be good choices. AHA! is completely independent of the directory
in which it is installed, but once installed it cannot easily be moved.
There is also no need to install AHA! in a location that is related to
where Tomcat is installed.</p>

<p>Creating the AHA! context involves the following steps:</p>
<ol>
	<li>First you have to log in as administrator on the TomCat
	server. When you installed TomCat you have chosen a name and password
	for this. Please make sure you do not use the same name and password
	for any other accounts, as the password is not stored very securely by
	TomCat. Go to <a href="/admin" target="_blank">/admin</a> to get to the
	<a href="../images/tomcatlogin.gif" target="_blank">login form</a>.</li>
	<li>After logging in TomCat will show you the Administration Tool.
	You have to open the "Service (Java Web Services Developer Pack)" node
	by clicking on the node, not the word, as shown in <a
		href="../images/admintool.gif" target="_blank">the
	administration tool screendump</a>. After this the "Service" node opens up,
	as shown in this <a href="../images/admintool2.gif" target="_blank">second
	screendump</a> and you have to then click on the term "Host (localhost)".</li>
	<li>In the "main" browser frame you should open the "Available
	Actions" drop down list, as shown in <a
		href="..images/availableactions.gif" target="_blank">this
	screendump</a> and select "Create New Context".</li>
	<li>A list of fields appears, some of which need to be filled out.
	The <a href="../images/ahaproperties.gif" target="_blank">properties
	screendumps</a> show the values to enter. They values that you may have or
	wish to change are:
	<ul>
		<li><em>Document Base</em>: shown as "d:\aha3" (this should be
		the full pathname of the directory where you unpacked the AHA!
		zipfile).</li>
		<li><em>Path</em>: "/aha". In theory this can be any string you
		want. We recommend "/aha" because this makes all AHA! paths start with
		the word "/aha" and this is also the assumption we made in this
		tutorial, which is accessible through <a href="/aha/tutorial/">/aha/tutorial/</a>
		only if "/aha" is chosen as the path value. <br />
		Note that an empty path "/" is allowed in TomCat. It means that all
		pathnames not explicitly configured to refer to another context will
		be handled by AHA!. However, such context already exists and AHA! can
		thus only be configured to use "/" by modifying that existing context
		instead of creating a new one. <br />
		Also note that the "path" is part of a URL, and must thus be written
		with a forward slash (/), not a backslash (\) like for directories in
		Windows.</li>
		<li><em>Reloadable</em> (Context Properties): True or False. When
		you set this value to True the TomCat server will notice changes to
		AHA!'s (web.xml) configuration file. This makes the installation
		procedure a bit smoother but causes overhead. For a long-term AHA!
		installation it is best to set this value to False.</li>
		<li><em>Use Naming</em>: This must be set to True. It enables a
		naming feature that AHA! uses to read its own configuration.</li>
		<li><em>Reloadable</em> (Loader Properties): True or False. When
		you set this value to True the TomCat server will notice changes to
		AHA!'s class files. This enables you to experiment with changes in the
		AHA! software without the need to restart the server after each
		compile phase. But it generates overhead so for a long-term AHA!
		installation it is best to set this value to False.</li>
		<li><em>Session ID Initializer</em>: This must be a unique
		string, but can otherwise be anything. We have used "AHADISTR30" as an
		example.</li>
	</ul>
	</li>
	<li>You need to press <img align="middle" src="../images/save.gif"
		alt="save" /> and then <img align="middle" src="../images/commit.gif"
		alt="commit changes" /> in order for the AHA! context to be created.
	</li>
	<li>Before you can start <gale:a href="firstconfig">the
	initial configuration</gale:a> of AHA! you need to restart the TomCat server. <gale:if
		expr="${firstconfig#knowledge}==0">
		<gale:block>
	(Execute shutdown.sh and startup.sh on Linux or shutdown.bat and
	startup.bat on Windows.) </gale:block>
	</gale:if></li>
</ol>

<h3>One extra tip: session timeout</h3>

<p>When your <gale:a href="enduser">end-users</gale:a> are logged
in and are inactive <gale:if expr="${ahacontext#visited}&lt;2">
	<gale:block>(not sending any request by clicking on a link for
instance)</gale:block>
</gale:if> their session may time out. Tomcat comes with a file "web.xml" in its
"conf" directory. In this "conf/web.xml" file you can change the value
of the &lt;session-timeout&gt; tag to a larger value. Unless you have a
very busy server with limited memory and a lot of users it does not hurt
to increase this value.</p>

<gale:object data="../footer.xhtml" type="text/aha">
	<p><b>Warning:</b> If you see this text it means you are not
	viewing the page through the AHA! system.</p>
</gale:object>
</body>
</html>
