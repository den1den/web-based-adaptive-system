<?xml version="1.0" encoding="UTF-8"?>
<gale:repo xmlns="http://www.w3.org/TR/xhtml1/strict"
xmlns:gale="http://gale.tue.nl/adaptation">

<gale:text tag="short" flat="true" type="creole">explaining the domain and adaptation
model used in AHA! through an example</gale:text>

<gale:text tag="long" type="creole">A small example of [[models|AHA! DM/AM]] XML, to show
what the format looks like:

{{{
&lt;concept>
  &lt;name>de_koninck&lt;/name>
  &lt;resource>
    de_koninck.xhtml
  &lt;/resource>
  &lt;req>beer.interest > 50&lt;/req>
  &lt;attribute name="knowledge"
    type="int">
    . . .
}}}
</gale:text>

<gale:text tag="default" type="creole">We consider the following simple domain model to
build our example:

{{images/domain-example.jpg|Example domain on Belgian beer}}

The five types of Belgian beer all contribute knowledge to the parent concept 'beer'. One
might argue that each individual beer contributes 20%. To achieve the corresponding
adaptation in AHA!, we can create adaptation rules that are triggered when the knowledge
of an individual beer changes.

The following code shows a DM/AM definition in its XML format. Though any text editor can
be used to create such a XML file, there is a specialized authoring tool called the
[[concept-editor|'concept editor']] to create and edit these files.</gale:text>

<gale:text tag="default"><pre>
<span style="float:left">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;!DOCTYPE conceptList SYSTEM 'concept.dtd'>
&lt;conceptList>
  &lt;name>Belgian Beer Example&lt;/name>
  &lt;concept>
    &lt;name>de_koninck&lt;/name>
    &lt;desc>Paul's favorite beer&lt;/desc>
    &lt;resource>de_koninck.xhtml&lt;/resource>
    &lt;req>beer.interest > 50&lt;/req>
    &lt;attribute name="access" type="bool"
      isPersistent="false" isSystem="true"
      isChangeable="false">
      &lt;default>false&lt;/default>
      &lt;generateListItem isPropagating="true">
        &lt;req>beer.interest &lt; 100&lt;/req>
        &lt;trueActions>
          &lt;action>
            &lt;concept>beer&lt;/concept>
            &lt;attribute>interest&lt;/attribute>
            &lt;expr>beer.interest + 10&lt;/expr>
          &lt;/action>
        &lt;/trueActions>
      &lt;/generateListItem>
      &lt;generateListItem isPropagating="true">
        &lt;req>chocolate.interest &lt; 50 and
          chocolate.interest > 4&lt;/req>
        &lt;trueActions>
          &lt;action>
            &lt;concept>chocolate&lt;/concept>
            &lt;attribute>interest&lt;/attribute>
            &lt;expr>chocolate.interest â€“ 5&lt;/expr>
          &lt;/action>
        &lt;/trueActions>
      &lt;/generateListItem>
      &lt;generateListItem isPropagating="true">
        &lt;req>beer.interest > 50&lt;/req>
        &lt;trueActions>
</span>          &lt;action>
            &lt;concept>de_koninck&lt;/concept>
            &lt;attribute>knowledge&lt;/attribute>
            &lt;expr>100&lt;/expr>
          &lt;/action>
        &lt;/trueActions>
        &lt;falseActions>
          &lt;action>
            &lt;concept>de_konink&lt;/concept>
            &lt;attribute>knowledge&lt;/attribute>
            &lt;expr>35&lt;/expr>
          &lt;/action>
        &lt;/falseActions>
      &lt;/generateListItem>
    &lt;/attribute>
    &lt;attribute name="knowledge" type="int"
      isPersistent="true" isSystem="false"
      isChangeable="true">
      &lt;default>0&lt;/default>
      &lt;generateListItem isPropagating="true">
        &lt;req>true&lt;/req>
        &lt;trueActions>
          &lt;action>
            &lt;concept>beer&lt;/concept>
            &lt;attribute>knowledge&lt;/attribute>
            &lt;expr>beer.knowledge + 0.2 *
              _de_koninck.knowledge&lt;/expr>
          &lt;/action>
        &lt;/trueActions>
      &lt;/generateListItem>
    &lt;/attribute>
  &lt;/concept>
  &lt;concept>
    ...next concept definition here...
  &lt;/concept>
  ...more concept definitions...
&lt;/conceptList>
</pre></gale:text>

<gale:text tag="default" type="creole">The above concept definition is linked to the page
'de_koninck.xhtml'. This page is considered 'desirable' by the system if the requirement
'{{{beer.interest > 50}}}' is fulfilled. For adaptation this means that links to the
de_koninck page will have a blue or purple anchor only for users with a high interest in
beer. (The link will be blue before the first visit to the page and purple afterwards.)
Uninterested users will not easily see the links to a special beer like 'De Koninck'
because the link anchors are hidden by making them black like normal text, and not
underlined.

When a user accesses the de_koninck page the attribute {{{access}}} //temporarily//
becomes true. The attribute is a 'system' attribute, meaning its value is changed by a
system even, in this case the access of the page. The attribute is not persistent, meaning
that its value returns to the default value after dealing with the access event. The event
causes the three actions (or 'generateListItem's) associated with this attribute to be
considered for execution. The first action increases the interest in beer, but only if
this interest is not yet 100 or more. The second action decreases the interest in
chocolate, but only if this interest is not yet known to be high (but high enough to not
become negative after the decrease). The third action registers that for interested users
the knowledge about de_koninck becomes 100 and for uninterested users (who happen to find
the page even though the links to it are hidden) the knowledge becomes only 35.

'{{{knowledge}}}' is a persistent attribute of de_koninck, meaning that it is stored in
the user model. Initially the attribute has the value 0 (the 'default'). The rule
associated with the knowledge attribute means that any change to this knowledge affects
the knowledge of the higher level concept 'beer' as well. 20% of the //change in the
knowledge// of de_koninck is transferred to 'beer'. The underscore (_) is used to indicate
that the //change// in the attribute value is used, not the //value// of the attribute
itself. As one can see from the example, //accessing// the de_koninck page changes the
//interest// in beer and in chocolate and raises the //knowledge// of de_koninck; this
knowledge change triggers the rule for the knowledge attribute of de_koninck, which will
then raise the //knowledge// of beer. The change in interest for beer and chocolate and
the change in knowledge of beer may also trigger rules associated with these concepts and
attributes but that cannot be seen from the example as the concept structure of beer and
chocolate is not given.

Creating the adaptation rules to calculate knowledge using forward reasoning is complex.
It would be far easier to author this behavior, if a rule could be created that defined
knowledge as the average knowledge of its children. GALE offers a richer
[[../gale/adaptation-model|adaptation model]] that allows these types of
'rules'.</gale:text>

</gale:repo>